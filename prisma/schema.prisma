// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// PostgreSQLの接続情報(ローカル環境からDBに接続する場合)
datasource db {
  provider = "postgresql"
  url      = env("POSTGRE_DATABASE_URL")
}

// MySQLの接続情報(ローカル環境からローカルDBに接続する場合)
//datasource db {
//  provider = "mysql"
//  url      = env("DATABASE_URL")
//}

// sqliteの接続情報(ローカル環境からローカルDBに接続する場合)
// datasource db {
//   provider = "sqlite"
//   url      = env("DATABASE_URL")
// }

// ユーザーテーブル(FirebaseのUIDを主キーに設定)
model users {
  firebase_uid   String   @id
  email         String   @unique
  name          String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

// パズルテーブル
model puzzles {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  user_answer   String // ユーザーの解答
  solution      String // 正答
  user_id       String // ユーザーID(FirebaseのUID)
  difficulty    Int     // 難易度
  is_favorite   Boolean @default(false) // お気に入り
  is_solved     Boolean @default(false) // 解いたかどうか
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  puzzle_categories puzzle_categories[]
  hints hints[]
  puzzle_approaches puzzle_approaches[]
}

// カテゴリーテーブル
model categories {
  id            Int      @id @default(autoincrement())
  name          String // カテゴリー名
  user_id       String // ユーザーID(FirebaseのUID)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  puzzle_categories puzzle_categories[]
}

// パズルとカテゴリーの中間テーブル
model puzzle_categories {
  puzzle_id    Int
  puzzle       puzzles @relation(fields: [puzzle_id], references: [id])
  category_id   Int
  category     categories @relation(fields: [category_id], references: [id])
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@id([puzzle_id, category_id])
}

// ヒントテーブル
model hints {
  id            Int      @id @default(autoincrement())
  puzzle_id     Int
  puzzle        puzzles @relation(fields: [puzzle_id], references: [id])
  content       String
  user_id       String // 第3正規化には反するが、カスケード削除の効率化のために追加
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt
}

// 定石テーブル
model approaches {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  user_id       String // ユーザーID(FirebaseのUID)  
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  puzzle_approaches puzzle_approaches[]
}

// 定石とパズルの中間テーブル
model puzzle_approaches {
  puzzle_id    Int
  puzzle       puzzles @relation(fields: [puzzle_id], references: [id])
  approach_id  Int
  approach     approaches @relation(fields: [approach_id], references: [id])
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  @@id([puzzle_id, approach_id])
}