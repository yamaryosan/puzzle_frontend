// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

// sqliteの接続情報
datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// MySQLの接続情報 
//datasource db {
//  provider = "mysql"
//  url      = env("DATABASE_URL")
//}

// ユーザーテーブル(FirebaseのUIDを主キーに設定)
model User {
  firebaseUid   String   @id
  email         String   @unique
  name          String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// パズルテーブル
model Puzzle {
  id            Int      @id @default(autoincrement())
  title         String
  description   String
  user_answer   String // ユーザーの解答
  solution      String // 正答
  user_id       String // ユーザーID(FirebaseのUID)
  difficulty    Int     // 難易度
  is_favorite   Boolean @default(false) // お気に入り
  is_solved     Boolean @default(false) // 解いたかどうか
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  PuzzleCategory PuzzleCategory[]
  Hint Hint[]
  PuzzleApproach PuzzleApproach[]
}

// カテゴリーテーブル
model Category {
  id            Int      @id @default(autoincrement())
  name          String // カテゴリー名
  user_id       String // ユーザーID(FirebaseのUID)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  PuzzleCategory PuzzleCategory[]
}

// パズルとカテゴリーの中間テーブル
model PuzzleCategory {
  puzzle_id    Int
  puzzle       Puzzle @relation(fields: [puzzle_id], references: [id])
  category_id   Int
  category     Category @relation(fields: [category_id], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@id([puzzle_id, category_id])
}

// ヒントテーブル
model Hint {
  id            Int      @id @default(autoincrement())
  puzzle_id     Int
  puzzle        Puzzle @relation(fields: [puzzle_id], references: [id])
  content       String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

// 定石テーブル
model Approach {
  id            Int      @id @default(autoincrement())
  title         String
  content       String
  user_id       String // ユーザーID(FirebaseのUID)  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  PuzzleApproach PuzzleApproach[]
}

// 定石とパズルの中間テーブル
model PuzzleApproach {
  puzzle_id    Int
  puzzle       Puzzle @relation(fields: [puzzle_id], references: [id])
  approach_id  Int
  approach     Approach @relation(fields: [approach_id], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@id([puzzle_id, approach_id])
}