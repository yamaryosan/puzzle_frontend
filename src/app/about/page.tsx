import ReactMarkdown from 'react-markdown';
import Box from '@mui/material/Box';

export default function Page() {
    return (
        <div>
            <Box sx={{ fontSize: "1rem", lineHeight: 1.6, '& h3': {marginTop: "1rem"} }}>
                <ReactMarkdown children={aboutText} />
            </Box>
        </div>
    );
}

const aboutText = `
# このアプリについて

### 概要

本アプリケーションは、論理パズル、謎解き、入試問題などを効率的に管理・学習するためのプラットフォームです。Next.jsをフロントエンド及びバックエンドAPIとして使用し、データベースにはPrismaを採用しています。ユーザー体験を向上させるための多様な機能を実装しています。

### 主な機能

1. **ユーザー認証**
   - Firebase Authentication を利用し、メールアドレスおよびGoogleアカウントでのユーザー登録・ログインを実現

2. **パズル管理**
   - 画像アップロード機能付きのリッチテキストエディタを使用し、問題文や本文を作成・編集可能
   - カテゴリー分類機能により、パズルを効率的に整理・検索可能

3. **学習支援機能**
   - パズルごとに「定石」（解法のコツ）を登録可能
   - 定石別の整理機能により、効果的な学習戦略の立案をサポート

4. **ユーザーエンゲージメント**
   - お気に入り登録機能により、ユーザーが重要なパズルを簡単に保存・アクセス可能

5. **学習進捗管理**
   - パズルの正誤判定機能により、ユーザーの理解度を即時に確認可能

### 技術スタック

- **フロントエンド/バックエンド**: Next.js
- **データベース**: Prisma
- **認証**: Firebase Authentication
- **デプロイ**: [デプロイ先のプラットフォーム名]

### 開発の目的と成果

本アプリケーションは、パズル愛好家や受験生などのユーザーが、効率的に問題を管理し、学習効果を最大化することを目的として開発されました。開発に際しては、パズル愛好家である友人と話し合って仕様を決めました。これにより、実際のユーザーのニーズと視点を直接取り入れ、より実用的で使いやすいアプリケーションの設計が可能になりました。

また、Next.jsとPrismaを組み合わせた最新のウェブ開発技術を駆使することで、高いパフォーマンスと拡張性を実現しました。Firebaseを活用した堅牢な認証システムにより、セキュアなユーザー管理を可能にしています。

本プロジェクトを通じて、Next.js開発の経験を積むとともに、ユーザー中心の設計思想に基づいたアプリケーション開発のスキルを磨くことができました。
`
